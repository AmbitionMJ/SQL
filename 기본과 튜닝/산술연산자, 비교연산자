/* 산술 연산자 (*,/,+,-) */ 
( SQL 실행 순서 : FROM -> WHERE -> GROUP BY -> HAVING -> SELECT -> ORDER BY )

//연봉이 36000 이상인 사원들의 이름과 연봉을 출력 , 연봉은 월급의 12배로 출력
select ename, sal * 12 from emp where sal * 12 >= 36000;

//직업이 ANALYST 인 사원들의 이름과 연봉을 출력
select ename, sal * 12 as 연봉 from emp where job = 'ANALYST';


/* 비교 연산자 (>,<,>=,<=,=,!=,<>,^=) */

//월급이 1200 이하인 사원들의 이름, 월급, 직업, 부서번호를 출력
 select ename, sal, job, deptno from emp where sal <= 1200;

//직업이 SALESMAN이 아닌 사원들의 이름과 직업을 출력 ( <> , != , ^= )
select ename, job from emp where job != 'SALESMAN';


/* 비교 연산자 (BETWEEN AND, NOT BETWEEN AND) */ (between 구문 사용시 (조건1)의 값이 (조건2)의 값보다 작거나 같아야 됩니다.)

//월급이 1000에서 3000 사이인 사원들의 이름과 월급을 출력
select ename, sal from emp where sal between 1000 and 3000;

//월급이 1000에서 3000 사이가 아닌 사원들의 이름과 월급을 출력 
select ename, sal from emp where sal not between 1000 and 3000;

//1981년 11월 01일 부터 1982년 05월 30일 사이에 입사한 사원들의 이름과 입사일을 출력
select ename, hiredate from emp where hiredate between '81/11/01' and '82/05/30';


/* 비교 연산자 (LIKE) */
(% : 자리에 어떤 것이 와도 상관 없다. 개수도 상관 없다.
_ : 어떤 것이 와도 상관 없다. 개수는 하나여야 한다.)

//이름의 첫글자가 S로 시작하는 사원들의 이름 출력 
select ename from emp where ename like 'S%';

//이름의 끝글자가 T로 끝나는 사원들의 이름 출력
select ename from emp where ename like '%T';

//이름의 두번째 철자가 M인 사원들의 이름 출력
select ename from emp where ename like '_M%';


/* 비교 연산자 (IS NULL) */
(null값과 비교연산자는 연산이 불가능)

//커미션이 null인 사원들의 이름과 커미션을 출력
select ename, comm from emp where comm is null;

//커미션이 null이 아닌 사원들의 이름과 커미션을 출력 (0과 공백은 완전 다르다.)
select ename, comm from emp where comm is not null; 


/* 비교 연산자 (IN, NOT IN) */

//직업이 SALESMAN, ANALYST, MANAGER인 사원들의 이름과 월급과 직업을 출력
select ename, sal, job from emp where job in('SALESMAN','ANALYST','MANAGER');

//직업이 SALESMAN, ANALYST, MANAGER 가 아닌 사원들의 이름과 월급과 직업을 출력
select ename, sal, job from emp where job not in('SALESMAN','ANALYST','MANAGER');


/* 논리 연산자 (AND, OR, NOT) */

//직업이 SALESMAN이고 월급이 1200 이상인 사원들의 이름과 월급과 직업을 출력
select ename, sal, job from emp where job='SALESMAN' and sal >=1200;

//부서번호가 30번이고 커미션이 100 이상인 사원들의 이름과 월급과 커미션을 출력
select ename, sal, comm from emp where deptno = 30 and comm >=100;


/* 대소문자 변환 함수 (UPPER, LOWER, INITCAP) */

//사원 테이블에서 이름을 출력하는데 소문자, 대문자, 첫글자만 대문자로 출력
select lower(ename), upper(ename), initcap(ename) from emp;


//이름이 scott인 사원의 이름과 월급을 출력 (이름을 소문자로 검색해도 결과가 출력되게 하세요.)
select ename, sal from emp where lower(ename)='scott';

















